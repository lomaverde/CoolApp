# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  before_all do
    setup_circle_ci
  end

  desc "Push a new beta build to TestFlight"
  lane :beta do

    match(git_url: "git@github.com-lv:lomaverde/match_ios.git",
          type: "appstore",
          app_identifier: "com.lomavede.CoolApp")

    increment_build_number(xcodeproj: "CoolApp.xcodeproj")
    sync_code_signing

    #disable_automatic_code_signing(path: "CoolApp.xcodeproj")

    gym(
      scheme: "CoolApp",
      workspace: "uCoolApp.xcworkspace",
      clean: true,
      output_name: "coolApp.ipa",
      configuration: "Release",
      export_method: "app-store" )

    #enable_automatic_code_signing(path: "CoolApp.xcodeproj")
    upload_to_testflight
  end

  desc "Push a ah-hoc internal distribution build to Crashlytics"
  lane :adhoc do

    match(git_url: "git@github.com-lv:lomaverde/match_ios.git",
          type: "development",
          app_identifier: "com.lomavede.CoolApp")

    #increment_build_number(xcodeproj: "CoolApp.xcodeproj")
    sync_code_signing

    #disable_automatic_code_signing(path: "CoolApp.xcodeproj")

    gym(
      scheme: "CoolApp",
      workspace: "uCoolApp.xcworkspace",
      clean: true,
      output_name: "coolApp.ipa",
      configuration: "TestRelease",
      export_method: "ad-hoc" )

    #enable_automatic_code_signing(path: "CoolApp.xcodeproj")

    # upload to Crashlytics
    crashlytics(
       api_token: "e9f26fc7844d203e9eafd073d008a15d5173a0ec",
       build_secret: "792838fe3eefde484c704fe306e30736eb0c7c5fe2a778faaa902c72c9a09259"
    )

  end

  desc "Run Unit and UI XCTest using the default device"
  lane :test do
    scan(scheme: "CoolApp",
         code_coverage: true,
         clean: true,
         output_directory: "output/scan",
         configuration: "TestRelease"
         )
  end

  desc "Build for testing"
  lane :buildtest do
    scan(scheme: "CoolApp",
         derived_data_path: "test_build",
         clean: true,
         build_for_testing: true,
         configuration: "TestRelease",
         destination: 'generic/platform=iOS'
         )
  end

  lane :certificates do
    match(app_identifier: ["com.lomavede.CoolApp"], readonly: true)
  end

end
